env:
  DIRECTORY: distribution
  PROJECT_NAME: refined-github

# FILE GENERATED WITH: npx ghat fregante/ghatemplates/webext
# SOURCE: https://github.com/fregante/ghatemplates
# OPTIONS: {"exclude":["on.schedule"]}

name: Release
on:
  workflow_dispatch: null
jobs:
  Version:
    outputs:
      created: ${{ env.DAILY_VERSION_CREATED }}
      version: ${{ env.DAILY_VERSION }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: npm
      - run: npm ci
      - name: Test and build
        run: npm run build
      - name: Create tag if necessary
        uses: fregante/daily-version-action@v2
      - name: Update manifest.json with version ${{ env.DAILY_VERSION}}
        if: env.DAILY_VERSION_CREATED
        run: npx dot-json@1 "$DIRECTORY/manifest.json" version "$DAILY_VERSION"
      - name: Ready for "submit" jobs
        if: env.DAILY_VERSION_CREATED
        uses: actions/upload-artifact@v4
        with:
          path: ${{ env.DIRECTORY }}
      # - name: Create release
      #   if: env.DAILY_VERSION_CREATED
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   working-directory: ${{ env.DIRECTORY }}
      #   run: |
      #     FILENAME="$PROJECT_NAME-$DAILY_VERSION.zip"
      #     zip -r "$FILENAME" ./*
      #     # Create as draft to curate it before sending it out
      #     gh release create "$DAILY_VERSION" "$FILENAME" --draft --generate-notes
  Chrome:
    if: needs.Version.outputs.created
    needs: Version
    name: Sign (Chrome)
    environment: Chrome
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4

      # Kiwi browser https://github.com/kiwibrowser/src.next/issues/1138
      - run: npm install dot-json@1 -g
      - run: npm run manifest artifact 3
      - id: packExtensionDir
        uses: cardinalby/webext-buildtools-pack-extension-dir-action@v1
        with:
          extensionDir: 'artifact'
          zipFilePath: 'build/extension.zip'
      
      - name: Load secret
        id: op-load-secret
        uses: 1password/load-secrets-action@v2
        with:
          export-env: false
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          SECRET: "op://CI/refined-github-pem/refined-github.pem"
      - name: Sign Chrome Extension crx file
        uses: cardinalby/webext-buildtools-chrome-crx-action@2.0.3
        with:
          zipFilePath: 'build/extension.zip'
          crxFilePath: "build/${{ env.PROJECT_NAME }}-${{ needs.Version.outputs.version }}.crx"
          privateKey: ${{ steps.op-load-secret.outputs.SECRET }}
      - name: Upload crx artifact
        uses: actions/upload-artifact@v4
        with:
          name: signed
          path: "build/${{ env.PROJECT_NAME }}-${{ needs.Version.outputs.version }}.crx"
  Firefox:
    if: needs.Version.outputs.created
    needs: Version
    name: Sign (Firefox)
    environment: Firefox
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4

      # Firefox https://github.com/refined-github/refined-github/issues/7477
      - run: npm install dot-json@1
      - run: npm run manifest artifact 2
      - name: Configure 1Password Service Account
        uses: 1password/load-secrets-action/configure@v2
        with:
          service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
      - name: Load credentials
        id: load-credentials
        uses: 1password/load-secrets-action@v2
        with:
          export-env: true
        env:
          API_KEY: "op://CI/Firefox Addon Dev/username"
          API_SECRET: "op://CI/Firefox Addon Dev/credential"

      - name: Sign extension
        run: npx web-ext@8 sign --channel unlisted
        working-directory: artifact
        env:
          WEB_EXT_API_KEY: ${{ env.API_KEY }}
          WEB_EXT_API_SECRET: ${{ env.API_SECRET }}
